



fokhrul@fokhrul-VirtualBox:~/Desktop$ ls ; pwd      ;Put a semicolon between the separate commands
Bangladesh.txt  file.txt  folder2  script1.sh       ;Output of the ls command
/home/fokhrul/Desktop                               ;Output of the pwd command

fokhrul@fokhrul-VirtualBox:~/Desktop$ date ; cal ;pwd
Mon Oct 14 23:51:50 CDT 2019        ;date command
    October 2019          cal command
Su Mo Tu We Th Fr Sa  
       1  2  3  4  5  
 6  7  8  9 10 11 12  
13 14 15 16 17 18 19  
20 21 22 23 24 25 26  
27 28 29 30 31        
                      
/home/fokhrul/Desktop       pwd command

fokhrul@fokhrul-VirtualBox:~/Desktop$ date ; CAL ; pwd
Mon Oct 14 23:54:26 CDT 2019
CAL: command not found          ;Even though CAL command fails, date and pwd commands work
/home/fokhrul/Desktop

fokhrul@fokhrul-VirtualBox:~/Desktop$ ls && pwd       ;We can use && sign also. BUT there is a DIFFERENCE
Bangladesh.txt  file.txt  folder2  script1.sh
/home/fokhrul/Desktop

fokhrul@fokhrul-VirtualBox:~/Desktop$ ls && CAL && pwd      ;Here CAL command fails. That's why pwd command does not execute
Bangladesh.txt  file.txt  folder2  script1.sh
CAL: command not found

fokhrul@fokhrul-VirtualBox:~/Desktop$ ls || pwd       ;Double pipe works a logical OR operator. If the first command works fine, the seocnd one will not execute
Bangladesh.txt  file.txt  folder2  script1.sh

fokhrul@fokhrul-VirtualBox:~/Desktop$ PWD || ls       ;First command did not work. So second one executes.
PWD: command not found
Bangladesh.txt  file.txt  folder2  script1.sh

